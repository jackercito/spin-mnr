{"ast":null,"code":"import { Auth0Service } from '../../../services/auth0.service'; //import { SnotifyService, SnotifyPosition } from 'ng-snotify';\n\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Experimento } from '../../modelo/experimento.model';\nimport { ExperimentosServiceService } from './../../services/experimentos-service.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../services/experimentos-service.service\";\nimport * as i2 from \"../../../services/auth0.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\n\nfunction EditarExperimentoComponent_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const espect_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", espect_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(espect_r5);\n  }\n}\n\nfunction EditarExperimentoComponent_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const sond_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", sond_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(sond_r6);\n  }\n}\n\nfunction EditarExperimentoComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"label\");\n    i0.ɵɵtext(3, \"Nucleo: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 24);\n    i0.ɵɵlistener(\"ngModelChange\", function EditarExperimentoComponent_div_29_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.experimento.nucleo = $event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.experimento.nucleo);\n  }\n}\n\nfunction EditarExperimentoComponent_div_51_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"label\");\n    i0.ɵɵtext(3, \"Fecha de salida: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 25);\n    i0.ɵɵlistener(\"ngModelChange\", function EditarExperimentoComponent_div_51_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.finDateFechaSalida = $event);\n    });\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", i0.ɵɵpipeBind2(5, 1, ctx_r3.experimento.fecha_salida, \"yyyy-MM-dd\"));\n  }\n}\n\nfunction EditarExperimentoComponent_div_52_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"label\");\n    i0.ɵɵtext(3, \"Usuario de salida: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 26);\n    i0.ɵɵlistener(\"ngModelChange\", function EditarExperimentoComponent_div_52_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.experimento.usuario_salida = $event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.experimento.usuario_salida);\n  }\n}\n\nconst ESPECTROMETROS = ['ESPECTRÓMETRO BRUKER AVANCE NEO', 'ESPECTRÓMETRO BRUKER AVANCE III / 500(Muestras Líquidas)', 'ESPECTRÓMETRO BRUKER AVANCE III / HD(Muestras sólidas)'];\nconst SONDA_A = ['PI HR BB0400 (5mm)', 'PA BBI400 S1 (5mm)'];\nconst SONDA_B = ['PABBI (5mm)', 'PASEX (10mm)'];\nconst SONDA_C = ['SPRB400172_7164 (7,5mm)', 'SPRB400172_7423 (7,5mm)', 'H8906-20_007 (Triple Resonancia)', 'H13664_0016 (2,5mm)', 'H12138_0076 (Dobe Resonancia)', 'H13349_0014 (Baja frecuencia)'];\nexport let EditarExperimentoComponent = /*#__PURE__*/(() => {\n  class EditarExperimentoComponent {\n    constructor(apiExperimento, auth, route, router, //private snotifyService: SnotifyService,\n    _location) {\n      this.apiExperimento = apiExperimento;\n      this.auth = auth;\n      this.route = route;\n      this.router = router;\n      this._location = _location;\n      this.experimento = new Experimento();\n      this.finDateFechaEntrada = new Date();\n      this.finDateFechaSalida = new Date();\n      this.espectrometros = ESPECTROMETROS;\n      auth.handleLoginCallback();\n    }\n\n    ngOnInit() {\n      this._getExperimento();\n    }\n\n    ngOnDestroy() {\n      if (this.authSubscription) this.authSubscription.unsubscribe();\n\n      this._destroyExperimentoSubscription();\n    }\n\n    onSelectEspectrometro(event) {\n      switch (event) {\n        case ESPECTROMETROS[0]:\n          this.sondas = SONDA_A;\n          break;\n\n        case ESPECTROMETROS[1]:\n          this.sondas = SONDA_B;\n          break;\n\n        case ESPECTROMETROS[2]:\n          this.sondas = SONDA_C;\n          break;\n      }\n    }\n\n    editarExperimento() {\n      this.experimento.espectrometro = this.espectrometroSeleccionado;\n      this.experimento.sonda = this.sondaSeleccionada;\n      this.experimento.fecha_entrada = this.finDateFechaEntrada;\n      if (this.experimento.completo) this.experimento.fecha_salida = this.finDateFechaSalida;\n\n      this._putExperimento();\n    }\n    /*  onSuccess(msg) {\r\n        this.snotifyService.success(msg, { showProgressBar: false, timeout: 5000, position: SnotifyPosition.rightTop });\r\n      }\r\n    \r\n      onError(err, titulo) {\r\n        this.snotifyService.error(err, titulo, { showProgressBar: false, timeout: 5000, position: SnotifyPosition.rightTop });\r\n      }\r\n      */\n\n\n    goBack() {\n      this._location.back();\n    }\n\n    _getExperimento() {\n      this.experimentosSubscription = this.apiExperimento.getOneExperimento$(this.route.snapshot.params['id']).subscribe(data => {\n        this.experimento = data;\n        this.onSelectEspectrometro(this.experimento.espectrometro);\n        this.espectrometroSeleccionado = this.experimento.espectrometro;\n        this.sondaSeleccionada = this.experimento.sonda;\n        this.finDateFechaEntrada = this.experimento.fecha_entrada;\n        this.finDateFechaSalida = this.experimento.fecha_salida;\n      }, err => {\n        //this.onError(err, 'Error al cargar el experimento');\n        this.router.navigate(['/experimentos/listar/']);\n      });\n    }\n\n    _putExperimento() {\n      this.experimentosSubscription = this.apiExperimento.putExperimento$(this.experimento).subscribe(data => {\n        //this.onSuccess(\"Experimento editado con exito\")\n        this.router.navigate(['/experimentos/mostrar/', this.experimento._id]);\n      }, err =>\n      /*this.onError(err, \"Error al editar el experimento\")*/\n      console.log(\"\"));\n    }\n\n    _destroyExperimentoSubscription() {\n      if (this.experimentosSubscription) this.experimentosSubscription.unsubscribe();\n    }\n\n  }\n\n  EditarExperimentoComponent.ɵfac = function EditarExperimentoComponent_Factory(t) {\n    return new (t || EditarExperimentoComponent)(i0.ɵɵdirectiveInject(i1.ExperimentosServiceService), i0.ɵɵdirectiveInject(i2.Auth0Service), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.Location));\n  };\n\n  EditarExperimentoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditarExperimentoComponent,\n    selectors: [[\"app-editar-experimento\"]],\n    decls: 61,\n    vars: 16,\n    consts: [[1, \"row\"], [1, \"col-md-7\"], [1, \"form-group\"], [\"name\", \"espectrometro\", \"id\", \"espectrometro\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"name\", \"sonda\", \"id\", \"sonda\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", \"name\", \"fecha_entrada\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"usuario_entrada\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"muestra\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"col-md-7\", 4, \"ngIf\"], [\"type\", \"text\", \"name\", \"id_solicitud\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-md-6\"], [\"for\", \"finalizado\"], [1, \"form-group\", \"input-group\"], [\"for\", \"finalizado\", 1, \"checkbox-inline\"], [\"type\", \"checkbox\", \"name\", \"finalizado\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"visible\", 1, \"checkbox-inline\"], [\"type\", \"checkbox\", \"name\", \"visible\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-md-6\", \"form-group\"], [1, \"btn\", \"btn-warning\", 3, \"click\"], [1, \"glyphicon\", \"glyphicon-save\"], [\"type\", \"button\", 1, \"btn\", \"btn-info\", 3, \"click\"], [1, \"glyphicon\", \"glyphicon-share-alt\"], [3, \"value\"], [\"type\", \"text\", \"name\", \"usuario_entrada\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", \"name\", \"fecha_salida\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"usuario_salida\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"]],\n    template: function EditarExperimentoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"label\");\n        i0.ɵɵtext(4, \"Espectrometro: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"select\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function EditarExperimentoComponent_Template_select_ngModelChange_5_listener($event) {\n          return ctx.espectrometroSeleccionado = $event;\n        })(\"change\", function EditarExperimentoComponent_Template_select_change_5_listener($event) {\n          return ctx.onSelectEspectrometro($event.target.value);\n        });\n        i0.ɵɵtemplate(6, EditarExperimentoComponent_option_6_Template, 2, 2, \"option\", 4);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"div\", 1)(8, \"div\", 2)(9, \"label\");\n        i0.ɵɵtext(10, \"Sondas: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"select\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function EditarExperimentoComponent_Template_select_ngModelChange_11_listener($event) {\n          return ctx.sondaSeleccionada = $event;\n        });\n        i0.ɵɵtemplate(12, EditarExperimentoComponent_option_12_Template, 2, 2, \"option\", 4);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"div\", 1)(14, \"div\", 2)(15, \"label\");\n        i0.ɵɵtext(16, \"Fecha de entrada: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function EditarExperimentoComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.finDateFechaEntrada = $event;\n        });\n        i0.ɵɵpipe(18, \"date\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"div\", 1)(20, \"div\", 2)(21, \"label\");\n        i0.ɵɵtext(22, \"Usuario de entrada: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function EditarExperimentoComponent_Template_input_ngModelChange_23_listener($event) {\n          return ctx.experimento.usuario_entrada = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(24, \"div\", 1)(25, \"div\", 2)(26, \"label\");\n        i0.ɵɵtext(27, \"Muestra: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function EditarExperimentoComponent_Template_input_ngModelChange_28_listener($event) {\n          return ctx.experimento.muestra = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(29, EditarExperimentoComponent_div_29_Template, 5, 1, \"div\", 9);\n        i0.ɵɵelementStart(30, \"div\", 1)(31, \"div\", 2)(32, \"label\");\n        i0.ɵɵtext(33, \"ID Solicitud: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function EditarExperimentoComponent_Template_input_ngModelChange_34_listener($event) {\n          return ctx.experimento.solicitud = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(35, \"div\", 11)(36, \"label\", 12);\n        i0.ɵɵtext(37, \" Finalizado \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"div\", 13)(39, \"label\", 14)(40, \"input\", 15);\n        i0.ɵɵlistener(\"ngModelChange\", function EditarExperimentoComponent_Template_input_ngModelChange_40_listener($event) {\n          return ctx.experimento.completo = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(41, \" \\u00A0\\u00A0\\u00A0\\u00A0\\u00A0 \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(42, \"div\", 11)(43, \"label\", 12);\n        i0.ɵɵtext(44, \" Recuperar muestra:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"div\", 13)(46, \"label\", 16)(47, \"input\", 17);\n        i0.ɵɵlistener(\"ngModelChange\", function EditarExperimentoComponent_Template_input_ngModelChange_47_listener($event) {\n          return ctx.experimento.visible = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(48, \" \\u00A0\\u00A0\\u00A0\\u00A0\\u00A0 \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(49, \"div\", 1);\n        i0.ɵɵelement(50, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(51, EditarExperimentoComponent_div_51_Template, 6, 4, \"div\", 9);\n        i0.ɵɵtemplate(52, EditarExperimentoComponent_div_52_Template, 5, 1, \"div\", 9);\n        i0.ɵɵelementStart(53, \"div\", 18)(54, \"button\", 19);\n        i0.ɵɵlistener(\"click\", function EditarExperimentoComponent_Template_button_click_54_listener() {\n          return ctx.editarExperimento();\n        });\n        i0.ɵɵtext(55, \" Guardar \");\n        i0.ɵɵelement(56, \"span\", 20);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(57, \"div\", 18)(58, \"button\", 21);\n        i0.ɵɵlistener(\"click\", function EditarExperimentoComponent_Template_button_click_58_listener() {\n          return ctx.goBack();\n        });\n        i0.ɵɵtext(59, \" Volver \");\n        i0.ɵɵelement(60, \"span\", 22);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.espectrometroSeleccionado);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.espectrometros);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.sondaSeleccionada);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.sondas);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", i0.ɵɵpipeBind2(18, 13, ctx.experimento.fecha_entrada, \"yyyy-MM-dd\"));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.experimento.usuario_entrada);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.experimento.muestra);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.espectrometroSeleccionado == \"ESPECTR\\u00D3METRO BRUKER AVANCE III / HD(Muestras s\\u00F3lidas)\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.experimento.solicitud);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.experimento.completo);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.experimento.visible);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.experimento.completo && ctx.experimento.visible);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.experimento.completo && ctx.experimento.visible);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.CheckboxControlValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.RequiredValidator, i5.CheckboxRequiredValidator, i5.NgModel, i4.DatePipe]\n  });\n  return EditarExperimentoComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}