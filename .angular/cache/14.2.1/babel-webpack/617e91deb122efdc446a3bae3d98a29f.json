{"ast":null,"code":"import _classCallCheck from \"C:/Users/palonso/source/repos/jackercito/spin-mnr/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/palonso/source/repos/jackercito/spin-mnr/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { Auth0Service } from '../../services/auth0.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../services/auth0.service\";\nexport var ExperimentosServiceService = /*#__PURE__*/(function () {\n  var ExperimentosServiceService = /*#__PURE__*/function () {\n    function ExperimentosServiceService(http, auth) {\n      _classCallCheck(this, ExperimentosServiceService);\n\n      this.http = http;\n      this.auth = auth;\n      this.option = {\n        headers: new HttpHeaders().set('Authorization', \"Bearer \".concat(this.auth.accessToken))\n      };\n    }\n\n    _createClass(ExperimentosServiceService, [{\n      key: \"getExperimentos$\",\n      value: function getExperimentos$() {\n        return this.http.get(\"/experimento\", this.option).pipe(catchError(this._handleError));\n      }\n    }, {\n      key: \"getOneExperimento$\",\n      value: function getOneExperimento$(id) {\n        return this.http.get(\"/experimento/\".concat(id), this.option).pipe(catchError(this._handleError));\n      }\n    }, {\n      key: \"setExperimentos$\",\n      value: function setExperimentos$(experimento) {\n        return this.http.post(\"/experimento\", experimento, {\n          headers: new HttpHeaders().set('Authorization', \"Bearer \".concat(this.auth.accessToken))\n        }).pipe(catchError(this._handleError));\n      }\n    }, {\n      key: \"putExperimento$\",\n      value: function putExperimento$(experimento) {\n        return this.http.put(\"/experimento/\".concat(experimento._id), experimento, this.option).pipe(catchError(this._handleError));\n      }\n    }, {\n      key: \"deleteExperimento$\",\n      value: function deleteExperimento$(id) {\n        return this.http.delete(\"/experimento/\".concat(id), this.option).pipe(catchError(this._handleError));\n      }\n    }, {\n      key: \"_handleError\",\n      value: function _handleError(err) {\n        var errorMsg = err.message || 'Unable to retrieve data';\n        return throwError(errorMsg);\n      }\n    }]);\n\n    return ExperimentosServiceService;\n  }();\n\n  ExperimentosServiceService.ɵfac = function ExperimentosServiceService_Factory(t) {\n    return new (t || ExperimentosServiceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Auth0Service));\n  };\n\n  ExperimentosServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ExperimentosServiceService,\n    factory: ExperimentosServiceService.ɵfac,\n    providedIn: 'root'\n  });\n  return ExperimentosServiceService;\n})();","map":null,"metadata":{},"sourceType":"module"}